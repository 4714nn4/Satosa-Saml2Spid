# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Satosa-Saml2Spid

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        apt update
        apt install -y libffi-dev libssl-dev python3-pip xmlsec1 procps libpcre3 libpcre3-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -r example_sp/djangosaml2_sp/requirements.txt
        pip install spid-sp-test
    #- name: Lint with flake8
      #run: |
        ## stop the build if there are Python syntax errors or undefined names
        #flake8 oidc_provider --count --select=E9,F63,F7,F82 --show-source --statistics
        ## exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 oidc_provider  --max-line-length 120 --count --exit-zero --statistics
    - name: run djangosaml2 sp
      run: |
        cd example_sp/djangosaml2_sp/
        bash run.sh &
        sleep 5
        cd ../../example/
    - name: run satosa-saml2spid
      run: |
        mkdir -p metadata/idp
        mkdir -p metadata/sp
        export SATOSA_APP=/usr/local/lib/$(python -c 'import sys; print(f"python{sys.version_info.major}.{sys.version_info.minor}")')/site-packages/satosa
        uwsgi --wsgi-file ../wsgi.py  --https 0.0.0.0:10000,./pki/cert.pem,./pki/privkey.pem --callable app -b 32768 &
        sleep 5
    - name: spid-sp-test
      run: |
        spid_sp_test --idp-metadata > metadata/idp/spid-sp-test.xml
        spid_sp_test --metadata-url https://localhost:10000/spidSaml2/metadata --authn-url "http://localhost:8000/saml2/login/?idp=https://localhost:10000/Saml2IDP/metadata&next=/saml2/echo_attributes&idphint=https%253A%252F%252Flocalhost%253A8080" -ap spid_sp_test.plugins.authn_request.SatosaSaml2Spid --extra --debug ERROR -tr
