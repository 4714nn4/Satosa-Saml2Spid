module: satosa.frontends.saml2.SAMLFrontend
# This allows external discovery services to present the mirrored providers transparently, as separate entities in its UI
# module: satosa.frontends.saml2.SAMLMirrorFrontend
name: Saml2IDP

config:
  # make metadata downloadable from entityid url
  entityid_endpoint: true

  idp_config:
    organization: {display_name: 'SaToSa Unical Proxy', name: 'uniSaToSa', url: 'http://www.testunical.it'}
    contact_person:
    - {contact_type: technical, email_address: technical@example.com, given_name: Technical}
    - {contact_type: support, email_address: support@example.com, given_name: Support}

    attribute_map_dir: 'attributes-map'

    key_file: ./pki/frontend.key
    cert_file: ./pki/frontend.cert
    encryption_keypairs:
    - {'key_file': ./pki/frontend.key, 'cert_file': ./pki/frontend.cert}

    metadata:
      # local: [./metadata/sp1.xml]
      # remote:
        # - url:https://kalmar2.org/simplesaml/module.php/aggregator/?id=kalmarcentral2&set=saml2
          # cert:null
      # using pyFF or other MDX server
      mdq:
        - url: "http://127.0.0.1:8001"
        # - url: "https://ds.testunical.it"
          # cert: ukfederation-mdq.pem

    entityid: '<base_url>/<name>/metadata'
    accepted_time_diff: 60

    # custom_attribute_release:
        # "default":
            # "":
                # exclude: ["givenName"]
        # idp-entity-id1
            # sp-entity-id1:
                # exclude: ["givenName"]

    service:
      idp:
        endpoints:
          single_sign_on_service: []
        name: Proxy IdP
        ui_info:
          display_name:
            - lang: en
              text: "IdP Proxy"
          description:
            - lang: en
              text: "IdP Description"
          information_url:
            - lang: en
              text: "http://satosa.information.url/"
          privacy_statement_url:
            - lang: en
              text: "http://satosa.privacy.url/"
          keywords:
            - lang: it
              text: ["Satosa", "IdP-IT"]
            - lang: en
              text: ["Satosa", "IdP-EN"]
          logo:
            text: "http://idp1.testunical.it/static/img/logo_header_tracciato.svg"
            width: "100"
            height: "100"
        name_id_format: ['urn:oasis:names:tc:SAML:2.0:nameid-format:persistent', 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient']

        want_authn_requests_signed: true
        want_authn_requests_only_with_valid_cert: true

        policy:
          default:
            attribute_restrictions: null
            fail_on_missing_requested: false
            lifetime: {minutes: 15}
            name_form: urn:oasis:names:tc:SAML:2.0:attrname-format:uri

            sign_response: true
            sign_assertion: true

            # they works both with ppln-dev branch
            # sign_alg: 'SIG_RSA_SHA384'
            # digest_alg: 'DIGEST_SHA384'
            sign_alg: "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
            digest_alg: "http://www.w3.org/2001/04/xmlenc#sha256"

            encrypt_assertion: true
            encrypted_advice_attributes: true

  acr_mapping:
    "": default-LoA
    "https://accounts.google.com": LoA1

  endpoints:
    single_sign_on_service:
      'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST': 'sso/post'
      'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect': 'sso/redirect'

  # If configured and not false or empty the common domain cookie _saml_idp will be set
  # with or have appended the IdP used for authentication. The default is not to set the
  # cookie. If the value is a dictionary with key 'domain' then the domain for the cookie
  # will be set to the value for the 'domain' key. If no 'domain' is set then the domain
  # from the BASE defined for the proxy will be used.
  #common_domain_cookie:
  #  domain: .example.com
